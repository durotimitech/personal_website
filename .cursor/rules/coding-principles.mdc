---
description: 
globs: 
alwaysApply: true
---
# Rule: Run Linter After Each Coding Iteration and Use Framer Motion for Animations

## Match
.*

## Linting Policy
- After generating or modifying any code (components, pages, utils, etc.), the agent must **run the project linter immediately**.
- The linter should use the configuration provided in `.eslintrc.js` or `.eslintrc.json`.
- Any reported errors or warnings should be addressed **automatically if safe to do so**, or flagged in comments if manual review is needed.
- Prefer using ESLint with the following plugins enabled:
  - `eslint:recommended`
  - `@typescript-eslint/recommended`
  - `plugin:react/recommended`
  - `plugin:tailwindcss/recommended`
  - `plugin:jsx-a11y/recommended` (for accessibility)
  - `plugin:prettier/recommended`

## Linter Execution Guidelines
- Remove unused variables, imports, and functions.
- Fix bad or duplicated JSX structure.
- Ensure consistent formatting (spacing, indentation, trailing commas).
- Catch TypeScript errors and fix incorrect types.
- Use Prettier for final formatting after linting.

## Animation & Interactions with Framer Motion
- Every **new page** or **component** must include **animated transitions** using `framer-motion`.
- Use `motion.div` (or `motion.section`, etc.) for layout animations like fade-in, slide-up, or staggered reveal.
- Include **micro-interactions** on hover, tap, or scroll — such as button hover effects, card scale on hover, or menu animations.
- Animate **presence transitions** using `<AnimatePresence>` when mounting/unmounting routes or modals.
- Avoid overuse: animations should be subtle, meaningful, and performance-friendly.
- Respect user preferences: support `prefers-reduced-motion`.

## Example
- ✅ After creating a new `AboutPage.tsx`:
  - Wrap main content with `motion.div` and apply entrance animation.
  - Use `whileHover={{ scale: 1.05 }}` for buttons or cards.
  - Ensure animations are defined inside the component and scoped appropriately.
  - Then run: `npx eslint . --fix` and `npx prettier --write .`

## Notes
- Always ensure the final code passes linting and includes appropriate animations using Framer Motion.
- For consistency, store reusable motion configs (e.g. variants) in a central file like `lib/motion.ts`.
- If you create a new project or file structure, include `.eslintrc` and Framer Motion setup.
